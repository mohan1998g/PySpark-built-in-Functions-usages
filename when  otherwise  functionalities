pyspark.sql.functions.when

Evaluates a list of conditions and returns one of multiple possible result expressions. If pyspark.sql.Column.otherwise() is not invoked, None is returned for unmatched conditions.

Parameters
condition : Column
      a boolean Column expression.

value : a literal value, or a Column expression.

Returns
Column : column 
      representing when expression.

Examples

df = spark.range(3)
df.select("id", when(df['id'] == 2, 3).otherwise(4).alias("age")).show()

+---+---+
| id|age|
+---+---+
|  0|  4|
|  1|  4|
|  2|  3|
+---+---+


df.select("id", when(df.id == 2, df.id + 1).alias("age")).show()

+---+----+
| id| age|
+---+----+
|  0|NULL|
|  1|NULL|
|  2|   3|
+---+----+


For more examples refer to

https://github.com/mohan1998g/PySpark/blob/5117a077f4248e370ba78f280b6eac57b5317e64/Case%20When%20Usage

https://github.com/mohan1998g/PySpark/blob/5117a077f4248e370ba78f280b6eac57b5317e64/multiple%20when%20otherwise%20usage

---------------------------------------------------------------------------------------------------------------------------------------------------

pyspark.sql.Column.when

Evaluates a list of conditions and returns one of multiple possible result expressions. If Column.otherwise() is not invoked, None is returned for unmatched conditions.

Parameters
condition : Column
      a boolean Column expression.

value
a literal value, or a Column expression.

Returns : Column
      Column representing whether each element of Column is in conditions.

Examples

from pyspark.sql import functions as sf
df = spark.createDataFrame(
     [(2, "Alice"), (5, "Bob")], ["age", "name"])
df.select(df.name, sf.when(df.age > 4, 1).when(df.age < 3, -1).otherwise(0)).show()
+-----+------------------------------------------------------------+
| name|CASE WHEN (age > 4) THEN 1 WHEN (age < 3) THEN -1 ELSE 0 END|
+-----+------------------------------------------------------------+
|Alice|                                                          -1|
|  Bob|                                                           1|
+-----+------------------------------------------------------------+

---------------------------------------------------------------------------------------------------------------------------------------------------

pyspark.sql.Column.otherwise

Evaluates a list of conditions and returns one of multiple possible result expressions. If Column.otherwise() is not invoked, None is returned for unmatched conditions.

Parameters
value
a literal value, or a Column expression.

Returns : Column
      Column representing whether each element of Column is unmatched conditions.


Examples

from pyspark.sql import functions as sf
df = spark.createDataFrame(
     [(2, "Alice"), (5, "Bob")], ["age", "name"])
df.select(df.name, sf.when(df.age > 3, 1).otherwise(0)).show()
+-----+-------------------------------------+
| name|CASE WHEN (age > 3) THEN 1 ELSE 0 END|
+-----+-------------------------------------+
|Alice|                                    0|
|  Bob|                                    1|
+-----+-------------------------------------+

