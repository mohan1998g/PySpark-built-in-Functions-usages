pyspark.sql.functions.contains

Returns a boolean. 
The value is True if right is found inside left. 
Returns NULL if either input expression is NULL. 
Otherwise, returns False. 
Both left or right must be of STRING or BINARY type.

Parameters
left : Column or str
        The input column or strings to check, may be NULL.

right : Column or str
        The input column or strings to find, may be NULL.

Examples

df = spark.createDataFrame([("Spark SQL", "Spark")], ['a', 'b'])
df.select(contains(df.a, df.b).alias('r')).collect()
[Row(r=True)]

df = spark.createDataFrame([("414243", "4243",)], ["c", "d"])
df = df.select(to_binary("c").alias("c"), to_binary("d").alias("d"))
df.printSchema()
root
 |-- c: binary (nullable = true)
 |-- d: binary (nullable = true)

df.select(contains("c", "d"), contains("d", "c")).show()
+--------------+--------------+
|contains(c, d)|contains(d, c)|
+--------------+--------------+
|          true|         false|
+--------------+--------------+

---------------------------------------------------------------------------------------------------------------------------------------------------

pyspark.sql.Column.contains

Contains the other element. Returns a boolean Column based on a string match.

Parameters
other
string in line. A value as a literal or a Column.

Examples

df = spark.createDataFrame([(2, "Alice"), (5, "Bob")], ["age", "name"])
df.filter(df.name.contains('o')).collect()
[Row(age=5, name='Bob')]

---------------------------------------------------------------------------------------------------------------------------------------------------

pyspark.sql.Column.isin

A boolean expression that is evaluated to true if the value of this expression is contained by the evaluated values of the arguments.

Parameters
cols
The result will only be true at a location if any value matches in the Column.

Returns : Column
        Column of booleans showing whether each element in the Column is contained in cols.

Examples

df = spark.createDataFrame(
     [(2, "Alice"), (5, "Bob")], ["age", "name"])
df[df.name.isin("Bob", "Mike")].collect()
[Row(age=5, name='Bob')]
df[df.age.isin([1, 2, 3])].collect()
[Row(age=2, name='Alice')]
