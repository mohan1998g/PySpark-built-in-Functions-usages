pyspark.sql.DataFrame.withColumnRenamed

Returns a new DataFrame by renaming an existing column. This is a no-op if the schema doesn’t contain the given column name.

Parameters
existing : str
        string, name of the existing column to rename.

new : str
        string, new name of the column.

Returns : DataFrame
        DataFrame with renamed column.

Examples

df = spark.createDataFrame([(2, "Alice"), (5, "Bob")], schema=["age", "name"])
df.withColumnRenamed('age', 'age2').show()
+----+-----+
|age2| name|
+----+-----+
|   2|Alice|
|   5|  Bob|
+----+-----+

-------------------------------------------------------------------------------------------

pyspark.sql.DataFrame.withColumnsRenamed

Returns a new DataFrame by renaming multiple columns. This is a no-op if the schema doesn’t contain the given column names.

Parameters
colsMap : dict
        a dict of existing column names and corresponding desired column names. Currently, only a single map is supported.

Returns : DataFrame
        DataFrame with renamed columns.

Notes

Support Spark Connect

Examples

df = spark.createDataFrame([(2, "Alice"), (5, "Bob")], schema=["age", "name"])
df = df.withColumns({'age2': df.age + 2, 'age3': df.age + 3})
df.withColumnsRenamed({'age2': 'age4', 'age3': 'age5'}).show()
+---+-----+----+----+
|age| name|age4|age5|
+---+-----+----+----+
|  2|Alice|   4|   5|
|  5|  Bob|   7|   8|
+---+-----+----+----+
