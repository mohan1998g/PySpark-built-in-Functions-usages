pyspark.sql.functions.endswith

Returns a boolean. The value is True if str ends with suffix. Returns NULL if either input expression is NULL. Otherwise, returns False. Both str or suffix must be of STRING or BINARY type.

Parameters
str : Column or str
        A column of string.

suffix : Column or str
        A column of string, the suffix.

Examples

df = spark.createDataFrame([("Spark SQL", "Spark",)], ["a", "b"])
df.select(endswith(df.a, df.b).alias('r')).collect()
[Row(r=False)]

df = spark.createDataFrame([("414243", "4243",)], ["e", "f"])
df = df.select(to_binary("e").alias("e"), to_binary("f").alias("f"))
df.printSchema()
root
 |-- e: binary (nullable = true)
 |-- f: binary (nullable = true)

df.select(endswith("e", "f"), endswith("f", "e")).show()
+--------------+--------------+
|endswith(e, f)|endswith(f, e)|
+--------------+--------------+
|          true|         false|
+--------------+--------------+

---------------------------------------------------------------------------------------------------------------------------------------------------

pyspark.sql.functions.startswith

Returns a boolean. The value is True if str starts with prefix. 
Returns NULL if either input expression is NULL. 
Otherwise, returns False. Both str or prefix must be of STRING or BINARY type.

Parameters
str : Column or str
        A column of string.

prefix : Column or str
        A column of string, the prefix.

Examples

df = spark.createDataFrame([("Spark SQL", "Spark",)], ["a", "b"])

df.select(startswith(df.a, df.b).alias('r')).collect()
[Row(r=True)]

df = spark.createDataFrame([("414243", "4142",)], ["e", "f"])

df = df.select(to_binary("e").alias("e"), to_binary("f").alias("f"))
df.printSchema()
root
 |-- e: binary (nullable = true)
 |-- f: binary (nullable = true)

df.select(startswith("e", "f"), startswith("f", "e")).show()
+----------------+----------------+
|startswith(e, f)|startswith(f, e)|
+----------------+----------------+
|            true|           false|
+----------------+----------------+

---------------------------------------------------------------------------------------------------------------------------------------------------

pyspark.sql.Column.endswith

String ends with. Returns a boolean Column based on a string match.

Parameters
other : Column or str
        string at end of line (do not use a regex $)

Examples

df = spark.createDataFrame(
     [(2, "Alice"), (5, "Bob")], ["age", "name"])
df.filter(df.name.endswith('ice')).collect()
[Row(age=2, name='Alice')]
df.filter(df.name.endswith('ice$')).collect()
[]

---------------------------------------------------------------------------------------------------------------------------------------------------

pyspark.sql.Column.startswith

String starts with. Returns a boolean Column based on a string match.

Parameters
other : Column or str
        string at start of line (do not use a regex ^)

Examples

df = spark.createDataFrame(
     [(2, "Alice"), (5, "Bob")], ["age", "name"])
df.filter(df.name.startswith('Al')).collect()
[Row(age=2, name='Alice')]
df.filter(df.name.startswith('^Al')).collect()
[]
